{
  "swagger": "2.0",
  "info": {
    "title": "Pie for Providers API v1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/businesses": {
      "get": {
        "summary": "lists all businesses for a user",
        "tags": [
          "businesses"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "businesses found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "summary": "creates a business",
        "tags": [
          "businesses"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "business",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createBusiness"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "business created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/businesses/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "retrieves a business",
        "tags": [
          "businesses"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "business found"
          },
          "404": {
            "description": "business not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates a business",
        "tags": [
          "businesses"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "business",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateBusiness"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "business updated"
          },
          "422": {
            "description": "business cannot be updated"
          },
          "404": {
            "description": "business not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes a business",
        "tags": [
          "businesses"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "204": {
            "description": "business deleted"
          },
          "404": {
            "description": "business not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/children": {
      "get": {
        "summary": "lists all children for a user",
        "tags": [
          "children"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "children found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "summary": "creates a child",
        "tags": [
          "children"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "child",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createChild"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "child created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/children/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "retrieves a child",
        "tags": [
          "children"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "child found"
          },
          "404": {
            "description": "child not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates a child",
        "tags": [
          "children"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "child",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateChild"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "child updated"
          },
          "422": {
            "description": "child cannot be updated"
          },
          "404": {
            "description": "child not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes a child",
        "tags": [
          "children"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "204": {
            "description": "child deleted"
          },
          "404": {
            "description": "child not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/payments": {
      "get": {
        "summary": "lists all payments for a user",
        "tags": [
          "payments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "payments found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "summary": "creates a payment",
        "tags": [
          "payments"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "payment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createPayment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "payment created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/payments/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "retrieves a payment",
        "tags": [
          "payments"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "payment found"
          },
          "404": {
            "description": "payment not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates a payment",
        "tags": [
          "payments"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "payment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updatePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "payment updated"
          },
          "422": {
            "description": "payment cannot be updated"
          },
          "404": {
            "description": "payment not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes a payment",
        "tags": [
          "payments"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "204": {
            "description": "payment deleted"
          },
          "404": {
            "description": "payment not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/sites": {
      "get": {
        "summary": "lists all sites for a user",
        "tags": [
          "sites"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "sites found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "summary": "creates a site",
        "tags": [
          "sites"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "site",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createSite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "site created"
          },
          "422": {
            "description": "invalid request"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/sites/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "retrieves a site",
        "tags": [
          "sites"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "site found"
          },
          "404": {
            "description": "site not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates a site",
        "tags": [
          "sites"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "site",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "site updated"
          },
          "422": {
            "description": "site cannot be updated"
          },
          "404": {
            "description": "site not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes a site",
        "tags": [
          "sites"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "204": {
            "description": "site deleted"
          },
          "404": {
            "description": "site not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "lists all users for a user",
        "tags": [
          "users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "users found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "summary": "creates a user",
        "tags": [
          "users"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/v1/users/{slug}": {
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "summary": "retrieves a user",
        "tags": [
          "users"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "200": {
            "description": "user found"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "updates a user",
        "tags": [
          "users"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated"
          },
          "422": {
            "description": "user cannot be updated"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "deletes a user",
        "tags": [
          "users"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.pieforproviders.v1+json"
          }
        ],
        "responses": {
          "204": {
            "description": "user deleted"
          },
          "404": {
            "description": "user not found"
          },
          "401": {
            "description": "not authorized"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "creates a user",
        "tags": [
          "users"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    }
  },
  "definitions": {
    "payment": {
      "type": "object",
      "properties": {
        "agency_id": {
          "type": "string",
          "example": "3fa57706-f5bb-4d40-9350-85871f698d52"
        },
        "amount_cents": {
          "type": "integer",
          "minimum": 0,
          "example": 19999
        },
        "amount_currency": {
          "type": "string",
          "example": "USD"
        },
        "care_finished_on": {
          "type": "string",
          "example": "2020-03-15"
        },
        "care_started_on": {
          "type": "string",
          "example": "2020-01-01"
        },
        "discrepancy_cents": {
          "type": "integer",
          "example": 456
        },
        "discrepancy_currency": {
          "anyOf": [
            {
              "type": "string",
              "example": "USD"
            },
            {
              "type": "null"
            }
          ]
        },
        "paid_on": {
          "type": "string",
          "example": "2020-05-20"
        },
        "site_id": {
          "type": "string",
          "example": "3fa57706-f5bb-4d40-9350-85871f698d51"
        }
      }
    },
    "createUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "user@user.com"
            },
            "full_name": {
              "type": "string",
              "example": "Marlee Matlin"
            },
            "greeting_name": {
              "type": "string",
              "example": "Marlee"
            },
            "language": {
              "type": "string",
              "example": "Farsi"
            },
            "organization": {
              "type": "string",
              "example": "Society for the Promotion of Elfish Welfare"
            },
            "password": {
              "type": "string",
              "example": "password1234!"
            },
            "password_confirmation": {
              "type": "string",
              "example": "password1234!"
            },
            "phone_number": {
              "type": "string",
              "example": "888-888-8888"
            },
            "service_agreement_accepted": {
              "type": "boolean",
              "example": "true"
            },
            "timezone": {
              "type": "string",
              "example": "Central Time (US & Canada)"
            }
          },
          "required": [
            "email",
            "full_name",
            "language",
            "password",
            "password_confirmation",
            "service_agreement_accepted",
            "timezone"
          ]
        }
      }
    },
    "updateUser": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "user@user.com"
            },
            "full_name": {
              "type": "string",
              "example": "Marlee Matlin"
            },
            "greeting_name": {
              "type": "string",
              "example": "Marlee"
            },
            "language": {
              "type": "string",
              "example": "Farsi"
            },
            "organization": {
              "type": "string",
              "example": "Society for the Promotion of Elfish Welfare"
            },
            "phone_number": {
              "type": "string",
              "example": "888-888-8888"
            },
            "service_agreement_accepted": {
              "type": "boolean",
              "example": "true"
            },
            "timezone": {
              "type": "string",
              "example": "Eastern Time (US & Canada)"
            }
          }
        }
      }
    },
    "createBusiness": {
      "type": "object",
      "properties": {
        "business": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Harlequin Child Care"
            },
            "category": {
              "type": "string",
              "example": "license_exempt_home"
            },
            "user_id": {
              "type": "uuid",
              "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
            }
          },
          "required": [
            "name",
            "category",
            "user_id"
          ]
        }
      }
    },
    "updateBusiness": {
      "type": "object",
      "properties": {
        "business": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Harlequin Child Care"
            },
            "category": {
              "type": "string",
              "example": "license_exempt_home"
            },
            "active": {
              "type": "boolean",
              "example": "true"
            }
          }
        }
      }
    },
    "createChild": {
      "type": "object",
      "properties": {
        "child": {
          "type": "object",
          "properties": {
            "ccms_id": {
              "type": "string",
              "example": "123456789"
            },
            "date_of_birth": {
              "type": "string",
              "example": "1991-11-01"
            },
            "full_name": {
              "type": "string",
              "example": "Seamus Finnigan"
            },
            "user_id": {
              "type": "uuid",
              "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
            },
            "child_sites_attributes": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "site_id"
                ],
                "properties": {
                  "site_id": {
                    "type": "uuid",
                    "example": "a42270e4-e4d4-485c-a57d-ccbad5729030"
                  },
                  "started_care": {
                    "type": "string",
                    "example": "2018-12-13"
                  },
                  "ended_care": {
                    "type": "string",
                    "example": "2019-08-04"
                  }
                }
              }
            }
          },
          "required": [
            "full_name",
            "date_of_birth",
            "user_id"
          ]
        }
      }
    },
    "updateChild": {
      "type": "object",
      "properties": {
        "child": {
          "type": "object",
          "properties": {
            "ccms_id": {
              "type": "string",
              "example": "987654321"
            },
            "date_of_birth": {
              "type": "string",
              "example": "1992-11-01"
            },
            "full_name": {
              "type": "string",
              "example": "Sean Flannery"
            }
          }
        }
      }
    },
    "createSite": {
      "type": "object",
      "properties": {
        "site": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Marberry Educational Center"
            },
            "address": {
              "type": "string",
              "example": "1100 Marks Ave"
            },
            "city": {
              "type": "string",
              "example": "Galesburg"
            },
            "state": {
              "type": "string",
              "example": "TX"
            },
            "zip": {
              "type": "string",
              "example": "54321"
            },
            "county": {
              "type": "string",
              "example": "Tigh"
            },
            "qris_rating": {
              "type": "string",
              "example": "2"
            },
            "business_id": {
              "type": "uuid",
              "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
            }
          },
          "required": [
            "name",
            "address",
            "city",
            "state",
            "zip",
            "county",
            "business_id"
          ]
        }
      }
    },
    "updateSite": {
      "type": "object",
      "properties": {
        "site": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Marberry Educational Center"
            },
            "address": {
              "type": "string",
              "example": "1100 Marks Ave"
            },
            "city": {
              "type": "string",
              "example": "Galesburg"
            },
            "state": {
              "type": "string",
              "example": "TX"
            },
            "zip": {
              "type": "string",
              "example": "54321"
            },
            "county": {
              "type": "string",
              "example": "Tigh"
            },
            "qris_rating": {
              "type": "string",
              "example": "2"
            },
            "business_id": {
              "type": "uuid",
              "example": "3fa57706-f5bb-4d40-9350-85871f698d55"
            }
          }
        }
      }
    }
  },
  "createPayment": {
    "allOf": [
      {
        "$ref": "#/definitions/payment"
      },
      {
        "type": "object",
        "required": [
          "agency_id",
          "site_id",
          "amount_cents",
          "care_finished_on",
          "care_started_on",
          "paid_on"
        ]
      }
    ]
  },
  "updatePayment": {
    "$ref": "#/definitions/payment"
  }
}